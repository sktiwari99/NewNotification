public static void downloadImage(String fileUrl) {

		if (fileUrl == null) {
			return;
		}
		if (fileUrl.equalsIgnoreCase("")) {
			return;
		}
		Bitmap bmImg = null;
		URL myFileUrl = null;
		try {
			myFileUrl = new URL(fileUrl);
		} catch (MalformedURLException e) {

			e.printStackTrace();
		}// Folder
		try {
			HttpURLConnection conn = (HttpURLConnection) myFileUrl
					.openConnection();
			conn.setDoInput(true);
			conn.connect();
			InputStream is = conn.getInputStream();
			bmImg = BitmapFactory.decodeStream(is);
			String sdcardpath = Environment.getExternalStorageDirectory()
					.getPath();
			File file = new File(sdcardpath, "Folder");
			file.mkdir();
			String fileName = fileUrl.substring(fileUrl.lastIndexOf("/"),
					fileUrl.lastIndexOf("."));
			String name = fileName + ".png";
			File f = new File(file, name);

			FileOutputStream fos = new FileOutputStream(f.getAbsolutePath());
			bmImg.compress(Bitmap.CompressFormat.PNG, 100, fos);
			fos.flush();
			fos.close();
		} catch (IOException e) {

			e.printStackTrace();
		}
	}
...//...................................//......................................

if (jsonObject2.getString("s_image") != null) {

							Thread thread = new Thread(new Runnable() {
								@Override
								public void run() {
										Constants.downloadImage(Constants.ImageBASEURL+studentDTO.getS_image());
								}
							});
							String fileUrl =Constants.ImageBASEURL+studentDTO.getS_image();
							Log.v("fileUrllll :", ""+fileUrl);
							if (fileUrl != null) {
								if (!fileUrl.equalsIgnoreCase("")) {
									String fileName = fileUrl.substring(
											fileUrl.lastIndexOf("/"),
											fileUrl.lastIndexOf("."));
									File file = new File(
											Constants.SDCARDPATH + "/Folder/"
													+ fileName + ".png");	
									Log.v("dfile :", ""+file);
									String filepath=file.getAbsolutePath();										
									if (!file.exists()) {
										thread.start();
										thread.join();
									}
								}
							}
							
					}
						Constants.sdto = studentDTO;
						Intent intent = new Intent(context, YourActivity.class);
						startActivity(intent);
						finish();
					}
